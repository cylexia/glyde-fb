# Keyboard
#
# inputs:
#   KB_VALUE    The current value
#   KB_OK       The label OK should go to
#   KB_CANCEL   The label Cancel should go to
#
# Outputs:
#   KB_VALUE    The new value
#

:SHOW_KEYBOARD
    f.defineStyle "kbValue" textColour "#000" lineColour "#444" fillColour "#ccc"
    f.defineStyle "kbKey" textColour "#008" lineColour "#44a" fillColour "#ccf" width 35 height 35 align "centre"
    
    # centre it using setOffsetX_Y (add getOffsetX, getOffsetY?)
    KB_LINES = setPart "4" to "1234567890"
    KB_LINES = setPart "3" to "abcdefghij" in KB_LINES
    KB_LINES = setPart "2" to "klmnopqrst" in KB_LINES
    KB_LINES = setPart "1" to "uvwxyz()-." in KB_LINES
    
    f.clear
    f.writeAs "value" style "kbValue" value KB_VALUE atX 5 atY 5 width 300 height 30
    
    KB_ROWI = @ 4
    KB_Y = @ 35
    :KB_SHOW:ROWS
        KB_ROW = getPart KB_ROWI from KB_LINES
        KB_X = @ 5
        KB_COL = @ 1
        :KB_SHOW:COLS
            KB_K = cropRightOffOf KB_ROW at 1
            KB_ROW = cropLeftOffOf KB_ROW at 1
            f.writeAs KB_K style "kbKey" atX KB_X atY KB_Y value KB_K onClickGoto :KB:KEY
            f.onKeyPressed KB_K goto :KB:KEY useId KB_K
            KB_X = increase KB_X by 40
            KB_COL = increase KB_COL by 1
            KB_HASMORE = testIf KB_COL <= 10
        (KB_HASMORE) goto :KB_SHOW:COLS
        KB_ROWI = decrease KB_ROWI by 1
        KB_Y = increase KB_Y by 40
    (KB_ROWI) goto :KB_SHOW:ROWS
    stop
    
:KB:KEY
echo "key"
    KB_K = f.getLastActionId
    KB_VALUE = join KB_VALUE & KB_K
    f.writeAs "value" style "kbValue" value KB_VALUE atX 5 atY 5 width 300 height 30
    stop